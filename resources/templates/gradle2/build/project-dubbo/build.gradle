 
sourceSets {
    main {
        java {
            srcDir 'src/main/java'
           
        }
        resources {
			srcDirs 'src/main/resources'
			srcDir 'src/main/java'  exclude '**/*.java'
        }
        
    }
    test {
        java {
            srcDir 'src/test/java'
           
        }
        resources {
			srcDirs 'src/test/resources'
			srcDir 'src/test/java'  exclude '**/*.java'
        }
        
    }
    
}

dependencies {
		compile project(':${projectname}-dubbo-inf')
		compile project(':${projectname}-service')
   compile (
               
       [group: 'com.bbossgroups.plugins', name: 'bboss-plugin-dubbo', version: "${bbossplugin_version}", transitive: true],
         
    )
    
    runtime(
		[group: 'com.bbossgroups', name: 'bboss-rt', version: "${bboss_version}", transitive: false],
    )
    
     
}

task copyLibFiles(type: Copy ){ 
	from jar.outputs
	from configurations.compile 
	into 'build/dist/${projectname}-dubbo/lib'
}
task copyResourceFiles(type: Copy ){ 
	from fileTree(dir: 'resources')
	into 'build/dist/${projectname}-dubbo/resources'
}

 
task copyToolFiles(type: Copy ){
	 
	from ('runfiles')
	{
		expand(bboss_version: "${bboss_version}")
		
	} 
    from configurations.runtime - configurations.compile
    filteringCharset = 'UTF-8'            
	into 'build/dist/${projectname}-dubbo'
	 
}
project.tasks.copyLibFiles.dependsOn(project.tasks.install) 
task releaseRuntimeZip(type: Zip,dependsOn:['copyToolFiles','copyResourceFiles','copyLibFiles']) {
    //appendix = 'wrapper'
   baseName='${projectname}-dubbo'
   from 'build/dist/${projectname}-dubbo'
   
}